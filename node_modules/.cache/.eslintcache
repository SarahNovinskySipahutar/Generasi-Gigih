[{"D:\\DATA SARAH\\Homework Module 3\\src\\index.js":"1","D:\\DATA SARAH\\Homework Module 3\\src\\reportWebVitals.js":"2","D:\\DATA SARAH\\Homework Module 3\\src\\App.js":"3","D:\\DATA SARAH\\Homework Module 3\\src\\components\\helper\\spotify.js":"4","D:\\DATA SARAH\\Homework Module 3\\src\\components\\Song\\index.js":"5"},{"size":500,"mtime":1650217875469,"results":"6","hashOfConfig":"7"},{"size":397,"mtime":1648652876861,"results":"8","hashOfConfig":"7"},{"size":4253,"mtime":1650215779440,"results":"9","hashOfConfig":"7"},{"size":527,"mtime":1648648722937,"results":"10","hashOfConfig":"7"},{"size":1006,"mtime":1649011692722,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"opwslv",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DATA SARAH\\Homework Module 3\\src\\index.js",[],[],"D:\\DATA SARAH\\Homework Module 3\\src\\reportWebVitals.js",[],[],"D:\\DATA SARAH\\Homework Module 3\\src\\App.js",["29","30","31","32"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport url from \"./components/helper/spotify\";\r\nimport Song from \"./components/Song\";\r\nimport {\r\n    BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const [token, setToken] = useState(\"\");\r\n    const [searchSong, setSearchSong] = useState(\"\");\r\n    const [songData, setSongData] = useState([]);\r\n    const [selectedSongs, setSelectedSongs] = useState([]);\r\n    const [, setCombineSongs] = useState([]);\r\n\r\n    // get the token from thr url\r\n    useEffect(() => {\r\n        const queryString = new URL(window.location.href.replace(\"#\", \"?\"))\r\n        .searchParams;\r\n        const accessToken = queryString.get(\"access_token\");\r\n        setToken(accessToken);\r\n    }, []);\r\n\r\n    // basically pass songData to combineSongs and add isSelected to combineSongs\r\n  useEffect(() => {\r\n    const handleCombineTracks = songData.map((song) => ({\r\n      ...song,\r\n      isSelected: selectedSongs.find((data) => data === song.uri),\r\n    }));\r\n    setCombineSongs(handleCombineTracks);\r\n  }, [songData, selectedSongs]);\r\n\r\n  // a function to get song data from spotify\r\n    const getSong = async () => {\r\n        await axios\r\n        .get(\r\n            `https://api.spotify.com/v1/search?q=${searchSong}&type=track&access_token=${token}`\r\n        )\r\n        .then((response) => {\r\n            setSongData(response.data.tracks.items);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleSelectBtn = (id) => {\r\n      const indexSelectedSong = selectedSongs.indexOf(id);\r\n      const newSelectedSong = [...selectedSongs];\r\n      (indexSelectedSong < 0) ? newSelectedSong.push(id) : newSelectedSong.splice(indexSelectedSong, 1);\r\n      setSelectedSongs(newSelectedSong);\r\n  };\r\n\r\n    return (\r\n        <div className=\"p-5 bg-gray-900 h-screen space-y-5 overflow-auto\">\r\n            <div className=\"text-center\">\r\n                <h2 className=\"text-white text-3xl mb-5 font-semibold\">\r\n                Create Playlist\r\n                </h2>\r\n                <a\r\n                href={url}\r\n                className=\"py-2 px-4 bg-blue-600 rounded text-white font-medium uppercase hover:bg-blue-700 text-xs leading-tight\"\r\n                >\r\n                Login\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <input\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={(e) => setSearchSong(e.target.value)}\r\n                />\r\n                <button\r\n                className=\"px-6 py-2 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-r focus:outline-none focus:ring-0 transition duration-150 ease-in-out hover:bg-blue-700\"\r\n                type=\"button\"\r\n                onClick={getSong}\r\n                >\r\n                Search\r\n                </button>\r\n            </div>  \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n                {songData.map((song) => {\r\n                const { id, name, artists, album, uri} = song;\r\n                const isSelected = selectedSongs.includes(id);\r\n                return (\r\n                    <div key={id}>\r\n                        <Song\r\n                        key={uri}\r\n                        uri={uri}\r\n                        image={album.images[0]?.url}\r\n                        title={name}\r\n                        album={artists[0]?.name}\r\n                        selectState={handleSelectBtn}\r\n              isSelected={isSelected}\r\n                        />\r\n                        <button className=\"inline-block px-6 py-2.5 mr-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\" onClick={() => handleSelectBtn(song.id)}>\r\n                            {isSelected ? \"Deselect\" : \"Select\"}\r\n                        </button>\r\n                    </div>\r\n                );\r\n\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;",["33","34"],"D:\\DATA SARAH\\Homework Module 3\\src\\components\\helper\\spotify.js",[],[],"D:\\DATA SARAH\\Homework Module 3\\src\\components\\Song\\index.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":6,"column":22,"nodeType":"37","messageId":"38","endLine":6,"endColumn":28},{"ruleId":"35","severity":1,"message":"39","line":7,"column":3,"nodeType":"37","messageId":"38","endLine":7,"endColumn":8},{"ruleId":"35","severity":1,"message":"40","line":8,"column":3,"nodeType":"37","messageId":"38","endLine":8,"endColumn":11},{"ruleId":"35","severity":1,"message":"41","line":9,"column":3,"nodeType":"37","messageId":"38","endLine":9,"endColumn":9},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-global-assign","no-unsafe-negation"]