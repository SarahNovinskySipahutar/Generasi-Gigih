{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA SARAH\\\\Homework Module 3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport url from \"./components/helper/spotify\";\nimport Song from \"./components/Song\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  const [searchSong, setSearchSong] = useState(\"\");\n  const [songData, setSongData] = useState([]);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n  const [, setCombineSongs] = useState([]); // get the token from thr url\n\n  useEffect(() => {\n    const queryString = new URL(window.location.href.replace(\"#\", \"?\")).searchParams;\n    const accessToken = queryString.get(\"access_token\");\n    setToken(accessToken);\n  }, []); // basically pass songData to combineSongs and add isSelected to combineSongs\n\n  useEffect(() => {\n    const handleCombineTracks = songData.map(song => ({ ...song,\n      isSelected: selectedSongs.find(data => data === song.uri)\n    }));\n    setCombineSongs(handleCombineTracks);\n  }, [songData, selectedSongs]); // a function to get song data from spotify\n\n  const getSong = async () => {\n    await axios.get(`https://api.spotify.com/v1/search?q=${searchSong}&type=track&access_token=${token}`).then(response => {\n      setSongData(response.data.tracks.items);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleSelectBtn = id => {\n    const indexSelectedSong = selectedSongs.indexOf(id);\n    const newSelectedSong = [...selectedSongs];\n    indexSelectedSong < 0 ? newSelectedSong.push(id) : newSelectedSong.splice(indexSelectedSong, 1);\n    setSelectedSongs(newSelectedSong);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 bg-gray-900 h-screen space-y-5 overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white text-3xl mb-5 font-semibold\",\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        className: \"py-2 px-4 bg-blue-600 rounded text-white font-medium uppercase hover:bg-blue-700 text-xs leading-tight\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\",\n        onChange: e => setSearchSong(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-6 py-2 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-r focus:outline-none focus:ring-0 transition duration-150 ease-in-out hover:bg-blue-700\",\n        type: \"button\",\n        onClick: getSong,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-5\",\n      children: songData.map(song => {\n        var _album$images$, _artists$;\n\n        const {\n          id,\n          name,\n          artists,\n          album,\n          uri\n        } = song;\n        const isSelected = selectedSongs.includes(id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Song, {\n            uri: uri,\n            image: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            title: name,\n            album: (_artists$ = artists[0]) === null || _artists$ === void 0 ? void 0 : _artists$.name,\n            selectState: handleSelectBtn,\n            isSelected: isSelected\n          }, uri, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"inline-block px-6 py-2.5 mr-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\",\n            onClick: () => handleSelectBtn(song.id),\n            children: isSelected ? \"Deselect\" : \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this);\n        {\n          /* if token is empty, redirect to login*/\n        }\n\n        /*#__PURE__*/\n        _jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: !token ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/create-playlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/create-playlist\",\n              children: /*#__PURE__*/_jsxDEV(CreatePlaylist, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"404\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"nnmz9W0Prci30nLJyZmn6jCLygQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/DATA SARAH/Homework Module 3/src/App.js"],"names":["useEffect","useState","axios","url","Song","BrowserRouter","Router","Route","Redirect","Switch","App","token","setToken","searchSong","setSearchSong","songData","setSongData","selectedSongs","setSelectedSongs","setCombineSongs","queryString","URL","window","location","href","replace","searchParams","accessToken","get","handleCombineTracks","map","song","isSelected","find","data","uri","getSong","then","response","tracks","items","catch","error","console","log","handleSelectBtn","id","indexSelectedSong","indexOf","newSelectedSong","push","splice","e","target","value","name","artists","album","includes","images"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport url from \"./components/helper/spotify\";\r\nimport Song from \"./components/Song\";\r\nimport {\r\n    BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const [token, setToken] = useState(\"\");\r\n    const [searchSong, setSearchSong] = useState(\"\");\r\n    const [songData, setSongData] = useState([]);\r\n    const [selectedSongs, setSelectedSongs] = useState([]);\r\n    const [, setCombineSongs] = useState([]);\r\n\r\n    // get the token from thr url\r\n    useEffect(() => {\r\n        const queryString = new URL(window.location.href.replace(\"#\", \"?\"))\r\n        .searchParams;\r\n        const accessToken = queryString.get(\"access_token\");\r\n        setToken(accessToken);\r\n    }, []);\r\n\r\n    // basically pass songData to combineSongs and add isSelected to combineSongs\r\n  useEffect(() => {\r\n    const handleCombineTracks = songData.map((song) => ({\r\n      ...song,\r\n      isSelected: selectedSongs.find((data) => data === song.uri),\r\n    }));\r\n    setCombineSongs(handleCombineTracks);\r\n  }, [songData, selectedSongs]);\r\n\r\n  // a function to get song data from spotify\r\n    const getSong = async () => {\r\n        await axios\r\n        .get(\r\n            `https://api.spotify.com/v1/search?q=${searchSong}&type=track&access_token=${token}`\r\n        )\r\n        .then((response) => {\r\n            setSongData(response.data.tracks.items);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleSelectBtn = (id) => {\r\n      const indexSelectedSong = selectedSongs.indexOf(id);\r\n      const newSelectedSong = [...selectedSongs];\r\n      (indexSelectedSong < 0) ? newSelectedSong.push(id) : newSelectedSong.splice(indexSelectedSong, 1);\r\n      setSelectedSongs(newSelectedSong);\r\n  };\r\n\r\n    return (\r\n        <div className=\"p-5 bg-gray-900 h-screen space-y-5 overflow-auto\">\r\n            <div className=\"text-center\">\r\n                <h2 className=\"text-white text-3xl mb-5 font-semibold\">\r\n                Create Playlist\r\n                </h2>\r\n                <a\r\n                href={url}\r\n                className=\"py-2 px-4 bg-blue-600 rounded text-white font-medium uppercase hover:bg-blue-700 text-xs leading-tight\"\r\n                >\r\n                Login\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <input\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={(e) => setSearchSong(e.target.value)}\r\n                />\r\n                <button\r\n                className=\"px-6 py-2 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-r focus:outline-none focus:ring-0 transition duration-150 ease-in-out hover:bg-blue-700\"\r\n                type=\"button\"\r\n                onClick={getSong}\r\n                >\r\n                Search\r\n                </button>\r\n            </div>  \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n                {songData.map((song) => {\r\n                const { id, name, artists, album, uri} = song;\r\n                const isSelected = selectedSongs.includes(id);\r\n                return (\r\n                    <div key={id}>\r\n                        <Song\r\n                        key={uri}\r\n                        uri={uri}\r\n                        image={album.images[0]?.url}\r\n                        title={name}\r\n                        album={artists[0]?.name}\r\n                        selectState={handleSelectBtn}\r\n              isSelected={isSelected}\r\n                        />\r\n                        <button className=\"inline-block px-6 py-2.5 mr-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\" onClick={() => handleSelectBtn(song.id)}>\r\n                            {isSelected ? \"Deselect\" : \"Select\"}\r\n                        </button>\r\n                    </div>\r\n                );\r\n                {/* if token is empty, redirect to login*/}\r\n      <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {!token ? <Login /> : <Redirect to=\"/create-playlist\" />}\r\n        </Route>\r\n        <Route path=\"/create-playlist\">\r\n          <CreatePlaylist />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <h3>404</h3>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}