{"ast":null,"code":"var _jsxFileName = \"D:\\\\DATA SARAH\\\\Homework Module 3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport url from \"./components/helper/spotify\";\nimport Song from \"./components/Song\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  const [searchSong, setSearchSong] = useState(\"\");\n  const [songData, setSongData] = useState([]);\n  useEffect(() => {\n    const queryString = new URL(window.location.href.replace(\"#\", \"?\")).searchParams;\n    const accessToken = queryString.get(\"access_token\");\n    setToken(accessToken);\n  }, []);\n\n  const getSong = async () => {\n    await axios.get(`https://api.spotify.com/v1/search?q=${searchSong}&type=track&access_token=${token}`).then(response => {\n      setSongData(response.data.tracks.items);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const [selectedSong, setSelectedSong] = useState([]);\n\n  const handleSelectBtn = id => {\n    const indexSelectedSong = selectedSong.indexOf(id);\n    const newSelectedSong = [...selectedSong];\n    indexSelectedSong < 0 ? newSelectedSong.push(id) : newSelectedSong.splice(indexSelectedSong, 1);\n    setSelectedSong(newSelectedSong);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 bg-gray-900 h-screen space-y-5 overflow-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white text-3xl mb-5 font-semibold\",\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        className: \"py-2 px-4 bg-blue-600 rounded text-white font-medium uppercase hover:bg-blue-700 text-xs leading-tight\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"Search\",\n        \"aria-label\": \"Search\",\n        onChange: e => setSearchSong(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"px-6 py-2 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-r focus:outline-none focus:ring-0 transition duration-150 ease-in-out hover:bg-blue-700\",\n        type: \"button\",\n        onClick: getSong,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-5\",\n      children: songData.map(song => {\n        var _album$images$, _artists$;\n\n        const {\n          id,\n          name,\n          artists,\n          album\n        } = song;\n        const isSelected = selectedSong.includes(id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Song, {\n            image: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            title: name,\n            album: (_artists$ = artists[0]) === null || _artists$ === void 0 ? void 0 : _artists$.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"inline-block px-6 py-2.5 mr-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\",\n            onClick: () => handleSelectBtn(song.id),\n            children: isSelected ? \"Deselect\" : \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"sSn8YeNfZWUkGtO1wqgc+KEkDKE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/DATA SARAH/Homework Module 3/src/App.js"],"names":["useEffect","useState","axios","url","Song","App","token","setToken","searchSong","setSearchSong","songData","setSongData","queryString","URL","window","location","href","replace","searchParams","accessToken","get","getSong","then","response","data","tracks","items","catch","error","console","log","selectedSong","setSelectedSong","handleSelectBtn","id","indexSelectedSong","indexOf","newSelectedSong","push","splice","e","target","value","map","song","name","artists","album","isSelected","includes","images"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport url from \"./components/helper/spotify\";\r\nimport Song from \"./components/Song\";\r\n\r\nfunction App() {\r\n    const [token, setToken] = useState(\"\");\r\n    const [searchSong, setSearchSong] = useState(\"\");\r\n    const [songData, setSongData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const queryString = new URL(window.location.href.replace(\"#\", \"?\"))\r\n        .searchParams;\r\n        const accessToken = queryString.get(\"access_token\");\r\n        setToken(accessToken);\r\n    }, []);\r\n\r\n    const getSong = async () => {\r\n        await axios\r\n        .get(\r\n            `https://api.spotify.com/v1/search?q=${searchSong}&type=track&access_token=${token}`\r\n        )\r\n        .then((response) => {\r\n            setSongData(response.data.tracks.items);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const [selectedSong, setSelectedSong] = useState([]);\r\n    const handleSelectBtn = (id) => {\r\n        const indexSelectedSong = selectedSong.indexOf(id);\r\n        const newSelectedSong = [...selectedSong];\r\n        (indexSelectedSong < 0) ? newSelectedSong.push(id) : newSelectedSong.splice(indexSelectedSong, 1);\r\n        setSelectedSong(newSelectedSong);\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-5 bg-gray-900 h-screen space-y-5 overflow-auto\">\r\n            <div className=\"text-center\">\r\n                <h2 className=\"text-white text-3xl mb-5 font-semibold\">\r\n                Create Playlist\r\n                </h2>\r\n                <a\r\n                href={url}\r\n                className=\"py-2 px-4 bg-blue-600 rounded text-white font-medium uppercase hover:bg-blue-700 text-xs leading-tight\"\r\n                >\r\n                Login\r\n                </a>\r\n            </div>\r\n            <div>\r\n                <input\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n                onChange={(e) => setSearchSong(e.target.value)}\r\n                />\r\n                <button\r\n                class=\"px-6 py-2 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded-r focus:outline-none focus:ring-0 transition duration-150 ease-in-out hover:bg-blue-700\"\r\n                type=\"button\"\r\n                onClick={getSong}\r\n                >\r\n                Search\r\n                </button>\r\n            </div>  \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\r\n                {songData.map((song) => {\r\n                const { id, name, artists, album } = song;\r\n                const isSelected = selectedSong.includes(id);\r\n                return (\r\n                    <div key={id}>\r\n                        <Song\r\n                        image={album.images[0]?.url}\r\n                        title={name}\r\n                        album={artists[0]?.name}\r\n                        />\r\n                        <button className=\"inline-block px-6 py-2.5 mr-3 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\" onClick={() => handleSelectBtn(song.id)}>\r\n                            {isSelected ? \"Deselect\" : \"Select\"}\r\n                        </button>\r\n                    </div>\r\n                );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}